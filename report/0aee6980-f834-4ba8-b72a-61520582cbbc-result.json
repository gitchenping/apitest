{"name": "test_Find_Bind_Third_User[myfixture3]", "status": "broken", "statusDetails": {"message": "pymysql.err.OperationalError: (2013, 'Lost connection to MySQL server during query')", "trace": "self = <utils.pysql.PyMySQL object at 0x000000000562DEF0>\nsql = \"select cust_id from customer_third where customer_third_id='18600000681\"\n\n    def mysqlget(self, sql):\n    \n        try:\n            cursor = self.conn.cursor()\n>           cursor.execute(sql)\n\nutils\\pysql.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.cursors.Cursor object at 0x000000000562DE48>\nquery = \"select cust_id from customer_third where customer_third_id='18600000681\"\nargs = None\n\n    def execute(self, query, args=None):\n        \"\"\"Execute a query\n    \n        :param str query: Query to execute.\n    \n        :param args: parameters used with query. (optional)\n        :type args: tuple, list or dict\n    \n        :return: Number of affected rows\n        :rtype: int\n    \n        If args is a list or tuple, %s can be used as a placeholder in the query.\n        If args is a dict, %(name)s can be used as a placeholder in the query.\n        \"\"\"\n        while self.nextset():\n            pass\n    \n        query = self.mogrify(query, args)\n    \n>       result = self._query(query)\n\nvenv\\lib\\site-packages\\pymysql\\cursors.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.cursors.Cursor object at 0x000000000562DE48>\nq = \"select cust_id from customer_third where customer_third_id='18600000681\"\n\n    def _query(self, q):\n        conn = self._get_db()\n        self._last_executed = q\n        self._clear_result()\n>       conn.query(q)\n\nvenv\\lib\\site-packages\\pymysql\\cursors.py:328: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x0000000004C3BF98>\nsql = b\"select cust_id from customer_third where customer_third_id='18600000681\"\nunbuffered = False\n\n    def query(self, sql, unbuffered=False):\n        # if DEBUG:\n        #     print(\"DEBUG: sending query:\", sql)\n        if isinstance(sql, text_type) and not (JYTHON or IRONPYTHON):\n            if PY2:\n                sql = sql.encode(self.encoding)\n            else:\n                sql = sql.encode(self.encoding, 'surrogateescape')\n>       self._execute_command(COMMAND.COM_QUERY, sql)\n\nvenv\\lib\\site-packages\\pymysql\\connections.py:516: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x0000000004C3BF98>\ncommand = 3\nsql = b\"select cust_id from customer_third where customer_third_id='18600000681\"\n\n    def _execute_command(self, command, sql):\n        \"\"\"\n        :raise InterfaceError: If the connection is closed.\n        :raise ValueError: If no username was specified.\n        \"\"\"\n        if not self._sock:\n>           raise err.InterfaceError(\"(0, '')\")\nE           pymysql.err.InterfaceError: (0, '')\n\nvenv\\lib\\site-packages\\pymysql\\connections.py:750: InterfaceError\n\nDuring handling of the above exception, another exception occurred:\n\n    def teardown_module():\n    \n        #先从customer_third表中找到绑定的cust_id\n        sql=\"select cust_id from customer_third where customer_third_id='\"+Find_Bind_Third_User.initparams['cust_third_id']\n    \n>       custid=PyMySQL().mysqlget(sql)\n\ntestcase\\Loginapi\\Find_Bind_Third_User_test.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\pysql.py:90: in mysqlget\n    cursor.execute(sql)\nvenv\\lib\\site-packages\\pymysql\\cursors.py:170: in execute\n    result = self._query(query)\nvenv\\lib\\site-packages\\pymysql\\cursors.py:328: in _query\n    conn.query(q)\nvenv\\lib\\site-packages\\pymysql\\connections.py:517: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\nvenv\\lib\\site-packages\\pymysql\\connections.py:732: in _read_query_result\n    result.read()\nvenv\\lib\\site-packages\\pymysql\\connections.py:1075: in read\n    first_packet = self.connection._read_packet()\nvenv\\lib\\site-packages\\pymysql\\connections.py:657: in _read_packet\n    packet_header = self._read_bytes(4)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x0000000004C3BF98>\nnum_bytes = 4\n\n    def _read_bytes(self, num_bytes):\n        self._sock.settimeout(self._read_timeout)\n        while True:\n            try:\n                data = self._rfile.read(num_bytes)\n                break\n            except (IOError, OSError) as e:\n                if e.errno == errno.EINTR:\n                    continue\n                self._force_close()\n                raise err.OperationalError(\n                    CR.CR_SERVER_LOST,\n                    \"Lost connection to MySQL server during query (%s)\" % (e,))\n            except BaseException:\n                # Don't convert unknown exception to MySQLError.\n                self._force_close()\n                raise\n        if len(data) < num_bytes:\n            self._force_close()\n            raise err.OperationalError(\n>               CR.CR_SERVER_LOST, \"Lost connection to MySQL server during query\")\nE           pymysql.err.OperationalError: (2013, 'Lost connection to MySQL server during query')\n\nvenv\\lib\\site-packages\\pymysql\\connections.py:707: OperationalError"}, "parameters": [{"name": "myfixture", "value": "({'cust_third_id': '18600000681', 'appkey': 1103}, ('0', '请求成功'))"}], "start": 1619518680459, "stop": 1619518680543, "uuid": "e4d42630-3eff-4e80-8e50-61b39d123564", "historyId": "19feef925b0f7d014a7fa175be39a814", "testCaseId": "3e1af3275710136f7cb7e7453f071cc1", "fullName": "testcase.Loginapi.Find_Bind_Third_User_test#test_Find_Bind_Third_User", "labels": [{"name": "tag", "value": "flaky(reruns=1, reruns_delay=5)"}, {"name": "tag", "value": "find_bind_third_user"}, {"name": "parentSuite", "value": "testcase.Loginapi"}, {"name": "suite", "value": "Find_Bind_Third_User_test"}, {"name": "host", "value": "A06P-A90F12DAA"}, {"name": "thread", "value": "5584-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.Loginapi.Find_Bind_Third_User_test"}]}