{"name": "用户名和密码都正确", "status": "failed", "statusDetails": {"message": "AssertionError: assert False is True\n +  where False = <bound method LoginSmsDbResult.dbcheckok of <data.login_sms_returncode_enum.LoginSmsDbResult object at 0x0000000004D6CDA0>>(({'appkey': 20020001, 'autokey': None, 'client_version': '10.7.0', 'ip_address': '192.199.199.199', ...}, ('0', '用户名和密码都正确')))\n +    where <bound method LoginSmsDbResult.dbcheckok of <data.login_sms_returncode_enum.LoginSmsDbResult object at 0x0000000004D6CDA0>> = <data.login_sms_returncode_enum.LoginSmsDbResult object at 0x0000000004D6CDA0>.dbcheckok\n +      where <data.login_sms_returncode_enum.LoginSmsDbResult object at 0x0000000004D6CDA0> = LoginSmsDbResult()", "trace": "pyfixture = ({'appkey': 20020001, 'autokey': None, 'client_version': '10.7.0', 'ip_address': '192.199.199.199', ...}, ('0', '用户名和密码都正确'))\n\n    @allure.title('{pyfixture[1][1]}')\n    @pytest.mark.login_sms\n    @pytest.mark.flaky(reruns=0,reruns_delay=10)\n    def test_LoginSms(pyfixture):\n    \n        #请求\n        url=LoingSms.url\n        data=pyfixture[0]\n        res=request(url=url,data=data)\n        #print(data)\n    \n        #返回码检查\n        assert res['statusCode']==pyfixture[1][0]\n        #数据库检查\n>       assert LoginSmsDbResult().dbcheckok(pyfixture) is True\nE       AssertionError: assert False is True\nE        +  where False = <bound method LoginSmsDbResult.dbcheckok of <data.login_sms_returncode_enum.LoginSmsDbResult object at 0x0000000004D6CDA0>>(({'appkey': 20020001, 'autokey': None, 'client_version': '10.7.0', 'ip_address': '192.199.199.199', ...}, ('0', '用户名和密码都正确')))\nE        +    where <bound method LoginSmsDbResult.dbcheckok of <data.login_sms_returncode_enum.LoginSmsDbResult object at 0x0000000004D6CDA0>> = <data.login_sms_returncode_enum.LoginSmsDbResult object at 0x0000000004D6CDA0>.dbcheckok\nE        +      where <data.login_sms_returncode_enum.LoginSmsDbResult object at 0x0000000004D6CDA0> = LoginSmsDbResult()\n\ntestcase\\Loginapi\\Login_Sms_test.py:165: AssertionError"}, "parameters": [{"name": "pyfixture", "value": "({'mobile_phone': 18811348250, 'vcode': '345678', 'appkey': 20020001, 'ip_address': '192.199.199.199', 'watchdog_flg': 1, 'permanent_id': 23243242341241231212, 'trace_id': 3234234242342132, 'source_url': 'http://www.ui.com', 'udid': 'abc29088809812121', 'client_version': '10.7.0', 'autokey': None, 'json_info': None, 'tongdun_deviceid': None, 'shumei_deviceid': None, 'result_format': 'json'}, ('0', '用户名和密码都正确'))"}], "start": 1595577236845, "stop": 1595577236941, "uuid": "dd8a028c-f76d-41d2-b8f8-4daa1779d503", "historyId": "7aea7df105883400ed331248db5125ae", "testCaseId": "3b771a89a9d875ddc678304aa7d66743", "fullName": "testcase.Loginapi.Login_Sms_test#test_LoginSms", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=10)"}, {"name": "tag", "value": "login_sms"}, {"name": "parentSuite", "value": "testcase.Loginapi"}, {"name": "suite", "value": "Login_Sms_test"}, {"name": "host", "value": "A06P-A90F12DAA"}, {"name": "thread", "value": "4400-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.Loginapi.Login_Sms_test"}]}